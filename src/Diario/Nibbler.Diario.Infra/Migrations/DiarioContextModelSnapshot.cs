// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nibbler.Diario.Infra.Data;

#nullable disable

namespace Nibbler.Diario.Infra.Migrations
{
    [DbContext(typeof(DiarioContext))]
    partial class DiarioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiarioEtiqueta", b =>
                {
                    b.Property<Guid>("DiarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EtiquetaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DiarioId", "EtiquetaId");

                    b.HasIndex("EtiquetaId");

                    b.ToTable("DiarioEtiqueta");
                });

            modelBuilder.Entity("Etiqueta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Etiquetas", (string)null);
                });

            modelBuilder.Entity("Nibbler.Diario.Domain.Diario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuantidadeReflexoes")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Diarios", (string)null);
                });

            modelBuilder.Entity("Nibbler.Diario.Domain.Emocao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emocoes", (string)null);
                });

            modelBuilder.Entity("Nibbler.Diario.Domain.Entrada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("varchar(5000)");

                    b.Property<DateTime>("DataDaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DiarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DiarioId");

                    b.ToTable("Entradas", (string)null);
                });

            modelBuilder.Entity("Nibbler.Diario.Domain.Reflexao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DiarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmocaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DiarioId");

                    b.HasIndex("EmocaoId");

                    b.ToTable("Reflexoes", (string)null);
                });

            modelBuilder.Entity("Nibbler.Diario.Domain.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaminhoFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("DiarioEtiqueta", b =>
                {
                    b.HasOne("Nibbler.Diario.Domain.Diario", null)
                        .WithMany()
                        .HasForeignKey("DiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Etiqueta", null)
                        .WithMany()
                        .HasForeignKey("EtiquetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nibbler.Diario.Domain.Diario", b =>
                {
                    b.HasOne("Nibbler.Diario.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Nibbler.Diario.Domain.Entrada", b =>
                {
                    b.HasOne("Nibbler.Diario.Domain.Diario", "Diario")
                        .WithMany("Entradas")
                        .HasForeignKey("DiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diario");
                });

            modelBuilder.Entity("Nibbler.Diario.Domain.Reflexao", b =>
                {
                    b.HasOne("Nibbler.Diario.Domain.Diario", null)
                        .WithMany("Reflexoes")
                        .HasForeignKey("DiarioId");

                    b.HasOne("Nibbler.Diario.Domain.Emocao", "Emocao")
                        .WithMany("Reflexoes")
                        .HasForeignKey("EmocaoId");

                    b.Navigation("Emocao");
                });

            modelBuilder.Entity("Nibbler.Diario.Domain.Diario", b =>
                {
                    b.Navigation("Entradas");

                    b.Navigation("Reflexoes");
                });

            modelBuilder.Entity("Nibbler.Diario.Domain.Emocao", b =>
                {
                    b.Navigation("Reflexoes");
                });
#pragma warning restore 612, 618
        }
    }
}
